image: node:latest
stages:
  - test
services:
  - mysql:5.7
variables:
  MYSQL_ALLOW_EMPTY_PASSWORD: '1'
  MYSQL_DATABASE: doctorP_db
  JWT_SECRET_KEY: $JWT_SECRET_KEY
  DB_HOST_TEST: $DB_HOST_TEST
  DB_PASSWORD_TEST: $DB_PASSWORD_TEST
  DB_USER_TEST: $DB_USER_TEST
  DB_NAME_TEST: db
  BASE_URL: $BASE_URL
  PORT: $PORT
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
test:
  stage: test
  before_script:
    - npm install --skip-cleanup
  script:
    - npm run test:CI
# codequality:
#   image: docker:latest
#   variables:
#     DOCKER_DRIVER: overlay
#   services:
#     - docker:dind
#   script:
#     - docker pull codeclimate/codeclimate:0.69.0
#     - docker run --env CODECLIMATE_CODE="$PWD" --volume "$PWD":/code --volume /var/run/docker.sock:/var/run/docker.sock --volume /tmp/cc:/tmp/cc codeclimate/codeclimate:0.69.0 init
#     - docker run --env CODECLIMATE_CODE="$PWD" --volume "$PWD":/code --volume /var/run/docker.sock:/var/run/docker.sock --volume /tmp/cc:/tmp/cc codeclimate/codeclimate:0.69.0 analyze -f json > codeclimate.json || true
#   artifacts:
#     paths: [codeclimate.json]
